// Generated by CoffeeScript 1.6.3
$(document).ready(function() {
  var back, calculateNewId, checkLocalStorage, clearStorage, emptyFields, init, loadNotes, removeNoteById, setListeners;
  checkLocalStorage = function() {
    var e;
    try {
      return 'localStorage' in window;
    } catch (_error) {
      e = _error;
      return false;
    }
  };
  clearStorage = function() {
    return localStorage.clear();
  };
  back = function() {
    $('#back').hide();
    $('#newNote').hide();
    $('#createNote').show();
    return loadNotes();
  };
  calculateNewId = function() {
    var maxId, note, notes;
    if (!$.isEmptyObject(localStorage)) {
      notes = JSON.parse(localStorage['chromeNotes']);
      maxId = 0;
      for (note in notes) {
        if (note.id > maxId) {
          maxId = note.id;
        }
      }
      return maxId + 1;
    }
  };
  emptyFields = function() {
    $('#title').val('');
    return $('#content').val('');
  };
  removeNoteById = function(id) {
    var idx, notes;
    if (!$.isEmptyObject(localStorage)) {
      notes = JSON.parse(localStorage['chromeNotes']);
      for (idx in notes) {
        if (notes[idx].id = id) {
          notes.splice(idx, 1);
          $('#note' + id).remove();
          break;
        }
      }
      return localStorage['chromeNotes'] = JSON.stringify(notes);
    }
  };
  setListeners = function() {
    $('#removeAll').on('click', function() {
      var ans;
      ans = confirm("Are you sure you want to remove all notes?");
      if (ans) {
        clearStorage();
        return loadNotes();
      }
    });
    $('#createNote').on('click', function() {
      $(this).hide();
      $('#storedNotes').empty();
      $('#back').show();
      return $('#newNote').show();
    });
    $('#saveNote').on('click', function() {
      var ar, newId, newNote, notes;
      if (!$.isEmptyObject(localStorage)) {
        notes = JSON.parse(localStorage['chromeNotes']);
      } else {
        notes = [];
      }
      if (notes.length > 0) {
        newId = calculateNewId();
        newNote = {
          "id": newId,
          "title": $('#title').val().trim(),
          "content": $('#content').val().trim()
        };
        notes.push(newNote);
        ar = notes;
      } else {
        localStorage['chromeNotes'] = '';
        newNote = {
          "id": 0,
          "title": $('#title').val().trim(),
          "content": $('#content').val().trim()
        };
        ar = [newNote];
      }
      localStorage['chromeNotes'] = JSON.stringify(ar);
      return back();
    });
    $('#back').on('click', function() {
      emptyFields();
      return back();
    });
    $('#storedNotes').on('click', '[id^="edit"]', function(data) {});
    return $('#storedNotes').on('click', '[id^="delete"]', function(data) {
      var id;
      id = data.srcElement.id.replace('delete', '');
      return removeNoteById(id);
    });
  };
  loadNotes = function() {
    var html, idx, notes, _results;
    if (!$.isEmptyObject(localStorage)) {
      $('#storedNotes').empty();
      notes = JSON.parse(localStorage['chromeNotes']);
      _results = [];
      for (idx in notes) {
        html = '<div id="note' + notes[idx].id + '">';
        html += '<img id="edit' + notes[idx].id + '" src="img/edit.png" />';
        html += '<img id="delete' + notes[idx].id + '" src="img/delete.png" />';
        html += '<b>' + notes[idx].title + '</b>';
        html += '</div>';
        _results.push($('#storedNotes').append(html));
      }
      return _results;
    }
  };
  init = function() {
    var storageSupport;
    storageSupport = checkLocalStorage();
    $('#newNote').hide();
    $('#back').hide();
    if (storageSupport) {
      setListeners();
      return loadNotes();
    }
  };
  return init();
});
